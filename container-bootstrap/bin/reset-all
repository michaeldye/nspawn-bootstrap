#!/bin/bash -x

function kill_machines() {
  verb=$1; shift

  machinectl list -o json | jq -r '.[] | .machine' | xargs -P0 -n1 -i sudo machinectl $verb {};
}


[[ -z "$CON_DOMAIN" ]] && {
  (echo "Envvar CON_DOMAIN not defined and must be" >&2)
  exit 1
}

export TEMPORARY_CON_DIR=${TEMPORARY_CON_DIR:=/tmp}
CON_HOSTS=$(find ./container-bootstrap/machine-scripts -iname "*.$CON_DOMAIN" -printf "%P\n" | xargs -i basename {} ".$CON_DOMAIN" | xargs)

[[ -z "$CON_HOSTS" ]] && {
  (echo "Envvar CON_HOSTS not defined and must be" >&2)
  exit 1
}

[[ ! -d "./container-bootstrap" ]] && {
  (echo "Missing expected dir ./container-bootstrap" >&2)
  exit 1
}

[[ ! -d "./SSH-keys-and-certs" ]] && {
  (echo "Missing expected dir ./SSH-keys-and-certs" >&2)
  exit 1
}

echo "Waiting for termination of all containers..."

ct=0
while true; do
  sleep 1
  ((ct == 0)) || ( ((ct % 10 == 0)) && ((ct > 10)) ) && {
    kill_machines terminate
  } || {
    ((ct > 200)) && {
      echo "Unable to stop all machines"
      exit 4
    }
  }

  ct=$((ct+1))
  machines=$(machinectl list -o json | jq -r '.[] | .machine')

  for c in $CON_HOSTS; do
    # continue 2 will continue outer level loop
    echo "$machines" | grep -q $c && continue 2
  done
  # if we get this far we have failed to find all CON_HOSTS in machine list which means they're all stopped
  break
done

mkdir -p ./container-bootstrap/machines
sudo rm -Rf ./container-bootstrap/machines/*.*

[[ -d ./container-bootstrap/machines/base ]] || {
  sudo /bin/bash -c "(export TEMPDIR=$TEMPORARY_CON_DIR; rm -Rf ./container-bootstrap/machines/*; ./container-bootstrap/build -y -o ./container-bootstrap/machines -g base -p cheese |& tee /tmp/base.out)"
}

export ENABLED_SCRIPTS=$(cd container-bootstrap/machine-scripts/; find -L . -type f -regex '.*[0-9]+\..*' -not -path "./common/disabled/*" -printf '%f\0' | xargs -0)

start=$(date -u +%s)
echo $CON_HOSTS | sed 's, ,\n,g' | xargs -n1 -P0 -i -- sudo --preserve-env=ENABLED_SCRIPTS /bin/bash -c "(export TEMPDIR=$TEMPORARY_CON_DIR; ./container-bootstrap/build -f {}.$CON_DOMAIN -y -o ./container-bootstrap/machines -b ./container-bootstrap/machines/base -p cheese -s ./SSH-keys-and-certs/generated |& tee ./container-bootstrap/machines/{}-prov.out; echo 'finished {}')"

end=$(date -u +%s)
echo "** Total build time: $(( end-start )) seconds"

# TODO: fix by making a drop-in for systemd and then starting the containers
echo $CON_HOSTS | sed 's, ,\n,g' | xargs -n1 -P0 -i sudo /bin/bash -c "systemd-nspawn --network-bridge=conhole --quiet --register=yes --boot --directory ./container-bootstrap/machines/{}.$CON_DOMAIN > ./container-bootstrap/machines/{}-init-start.out 2>&1 & disown %1"

echo ""
echo "Finished."
